name: Build & Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      commit:
        description: "Commit SHA or branch to build"
        required: true
        default: "main"
      tag:
        description: "Docker image tag to build and push"
        required: true
        default: "latest"

jobs:
  # We use the "hard" way to build multi-arch images using docker manifest
  # to avoid the need of using an emulator for ARM images.
  #
  # This way we can take advantage of the github actions ARM runners.
  #
  # https://www.docker.com/blog/multi-arch-build-and-images-the-simple-way/
  build-and-push-images:
    strategy:
      matrix:
        vars: [
          { os: ubuntu-24.04, platform: amd64 },
          { os: ubuntu-24.04-arm, platform: arm64 },
        ]

    name: Build and push images
    runs-on: ${{ matrix.vars.os }}
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build the Docker image
        run: >
          docker build
          --tag eduardolat/pgbackweb:${{ github.event.inputs.tag }}-${{ matrix.vars.platform }}
          --build-arg TARGETPLATFORM=linux/${{ matrix.vars.platform }}
          --file docker/Dockerfile .

      - name: Push the Docker image
        run: docker push eduardolat/pgbackweb:${{ github.event.inputs.tag }}-${{ matrix.vars.platform }}

  merge-and-push-manifest:
    name: Merge manifest
    needs: build-and-push-images
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Merge and push manifest
        run: |
          docker manifest create eduardolat/pgbackweb:${{ github.event.inputs.tag }} \
          eduardolat/pgbackweb:${{ github.event.inputs.tag }}-amd64 \
          eduardolat/pgbackweb:${{ github.event.inputs.tag }}-arm64

          docker manifest push eduardolat/pgbackweb:${{ github.event.inputs.tag }}
